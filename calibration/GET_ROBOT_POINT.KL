PROGRAM RIFTEK_ROBOT_RESULT
TYPE
    robot_rangefinder_point FROM RIF_CALIB  = STRUCTURE
        robot_position : XYZWPREXT
        rangefinder_point : REAL
        rotation_matrix : ARRAY[3,3] OF REAL
    ENDSTRUCTURE
VAR
    comm_file : FILE
    ROBOT_POSITION_REGISTER_NUMBER : INTEGER
    CURRENT_POSITION : robot_rangefinder_point
    ROBOT_CURRENT_POSITION : POSITION
    RANGE : REAL
    ROTATION_MATRIX : ARRAY[3,3] OF REAL
    RESULT_POS_REG : XYZWPR
    
    ROUTINE GET_TPE_INT_PARAMETER(number : INTEGER) : INTEGER &
    FROM RIF_COMM_BUNDLE

    ROUTINE OPEN_FILE(c_file : FILE) &
    FROM RIF_COMM_BUNDLE

    ROUTINE GET_RANGE(c_file : FILE; register : INTEGER) : REAL &
    FROM RIF_COMM_BUNDLE

    ROUTINE CLOSE_FILE(c_file : FILE) &
    FROM RIF_COMM_BUNDLE

    ROUTINE FILL_ROTATION_MATRIX(point : robot_rangefinder_point) &
    FROM RIF_CALIB

BEGIN
    ROBOT_POSITION_REGISTER_NUMBER = GET_TPE_INT_PARAMETER(1)
    --GET ROBOT POSITION
    CURRENT_POSITION.robot_position = CURPOS(0, 0, 1)
    
    --GET RANGEFINDER RANGE
    OPEN_FILE(comm_file)
    CURRENT_POSITION.rangefinder_point = GET_RANGE(comm_file, 100)
    CLOSE_FILE(comm_file)
    
    --FILL ROTATION MATRIX
    FILL_ROTATION_MATRIX(CURRENT_POSITION)
    
    ROTATION_MATRIX = CURRENT_POSITION.rotation_matrix
    RESULT_POS_REG.X = ROTATION_MATRIX[1,1] * CURRENT_POSITION.rangefinder_point + CURRENT_POSITION.robot_position.X
    RESULT_POS_REG.Y = ROTATION_MATRIX[1,2] * CURRENT_POSITION.rangefinder_point + CURRENT_POSITION.robot_position.Y
    RESULT_POS_REG.Z = ROTATION_MATRIX[1,3] * CURRENT_POSITION.rangefinder_point + CURRENT_POSITION.robot_position.Z
    SET_POS_REG(ROBOT_POSITION_REGISTER_NUMBER, RESULT_POS_REG, 1)


END RIFTEK_ROBOT_RESULT